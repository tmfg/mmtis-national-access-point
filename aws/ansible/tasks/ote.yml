- name: Gathering ec2 facts
  amazon.aws.ec2_metadata_facts:

- name: Print ansible version
  debug:
    msg: "Ansible version is  {{ ansible_version.full }}"

- name: Fetch ALB Target group ARN
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 describe-target-groups
     --names "{{vault_ote_target_group_name}}"
  register: target_group

- name: Print target_group
  debug:
    msg: "Target group is {{ target_group }}"

- name: Set instance id
  set_fact: instance_id="{{ansible_ec2_instance_id}}"

- name: De-register from ALB
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 deregister-targets
    --target-group-arn "{{(target_group.stdout | from_json).TargetGroups[0].TargetGroupArn}}"
    --targets Id="{{instance_id}}",Port="3000"

- pause:
    seconds: 10

- name: Install required packages
  yum:
    name: "{{ packages }}"
    state: installed
  vars:
    packages:
    - python3-pip
    - java-1.8.0-openjdk

- name: Ensure botocore and boto3 modules are installed
  pip:
    name:         [ "boto3"]
    extra_args:   "--user"

- name: Check Java 17 existence and save state to variable get_java17
  stat: path={{java_name}}
  register: get_java17

- name: Download Java 17
  get_url:
    url="{{java_download_url}}"
    dest="{{java_archive}}"
  when: not get_java17.stat.exists

- name: Unpack archive Java 17
  unarchive:
    src: "{{java_archive}}"
    dest: "{{java_download_folder}}"
    remote_src: yes
  when: not get_java17.stat.exists

- name: Fix Java 17 ownership
  file: "state=directory path={{java_name}} owner=root group=root recurse=yes"
  when: not get_java17.stat.exists

- name: Make Java 17 available for system
  command: 'alternatives --install "/usr/bin/java" "java" "{{java_name}}/bin/java" 2000'
  when: not get_java17.stat.exists

- name: Take Java 17 into use
  command: 'alternatives --set "java" "{{java_name}}/bin/java"'
  when: not get_java17.stat.exists

- name: Create OTE app folder
  file: path=/opt/ote state=directory owner=napote group=napote

- name: Create OTE config
  template: src=templates/ote/config.edn.j2 dest=/opt/ote/config.edn
  tags: configuration

- name: Write OTE startup script
  template: src=templates/ote/ote.sh.j2 dest=/opt/ote/ote.sh mode=755
  tags: configuration

- name: Write OTE service
  template: src=templates/centos7-service-template.j2 dest=/etc/systemd/system/ote.service mode=755
  with_items:
    - description: "OTE"
      start_file: /opt/ote/ote.sh
      user_name: napote
      user_group: napote
      workingdir: /opt/ote
  tags: configuration

- name: Upload OTE build
  copy: src={{ote_build_artifact}} dest=/opt/ote/ote.jar owner=napote
  tags: deploy

- name: Restart OTE service
  service: name=ote state=restarted
  tags: configuration,deploy

- name: Wait for service search URL to respond 200
  uri: url="http://localhost:3000/service-search?offset=0&limit=0" status_code=200
  register: result
  until: result.status == 200
  retries: 30
  delay: 10

- name: Register to ALB
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 register-targets
    --target-group-arn "{{(target_group.stdout | from_json).TargetGroups[0].TargetGroupArn}}"
    --targets Id="{{instance_id}}",Port="3000"

- pause:
    seconds: 10